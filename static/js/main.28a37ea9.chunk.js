(this.webpackJsonppath_finding_visualizer=this.webpackJsonppath_finding_visualizer||[]).push([[0],{18:function(t,e,i){},19:function(t,e,i){},20:function(t,e,i){},22:function(t,e,i){},23:function(t,e,i){},24:function(t,e,i){},25:function(t,e,i){},26:function(t,e,i){},27:function(t,e,i){},28:function(t,e,i){"use strict";i.r(e);var n=i(2),s=i.n(n),a=i(13),r=i.n(a),o=(i(18),i(19),i(1)),c=i(3),u=i(6),d=i(7),l=i(8),h=i(11),f=i(9),v=(i(20),i(0)),g=function(t){Object(h.a)(i,t);var e=Object(f.a)(i);function i(){return Object(u.a)(this,i),e.apply(this,arguments)}return Object(d.a)(i,[{key:"render",value:function(){var t=this.props,e=t.col,i=t.isFinish,n=t.isStart,s=t.weight,a=t.isWall,r=t.side,o=t.onMouseDown,c=t.onMouseEnter,u=t.onMouseUp,d=t.row,l=i?"node-finish":n?"node-start":a?"node-wall":s>1?"node-weight":"";return Object(v.jsx)("div",{id:"node-".concat(d,"-").concat(e),style:{height:"".concat(r,"vh"),width:"".concat(r,"vh")},className:"node ".concat(l),onMouseDown:function(){return o(d,e)},onMouseEnter:function(){return c(d,e)},onMouseUp:function(){return u()}})}}]),i}(n.Component);i(22);function p(t,e){var i=[],n=t.col,s=t.row;return s<e.length-1&&i.push(e[s+1][n]),n<e[0].length-1&&i.push(e[s][n+1]),n>0&&i.push(e[s][n-1]),s>0&&i.push(e[s-1][n]),i.filter((function(t){return!t.isVisited}))}function j(t){t.sort((function(t,e){return t.distance-e.distance}))}function w(t){t.sort((function(t,e){return t.heuristic-e.heuristic}))}function m(t){t.sort((function(t,e){return t.heuristic+t.distance-(e.heuristic+e.distance)}))}function b(t){var e,i=[],n=Object(o.a)(t);try{for(n.s();!(e=n.n()).done;){var s,a=e.value,r=Object(o.a)(a);try{for(r.s();!(s=r.n()).done;){var c=s.value;i.push(c)}}catch(u){r.e(u)}finally{r.f()}}}catch(u){n.e(u)}finally{n.f()}return i}function y(t,e,i){return function(t,e,i){var n=N(t,e.row,e.col,i.col),s=N(t,i.row,e.col,i.col),a=O(t,i.col,e.row,i.row),r=O(t,e.col,e.row,i.row),o=n+a,c=s+r;return o<c?o:c}(t,e,i)}function N(t,e,i,n){var s=0;if(i>n){var a=[n,i];i=a[0],n=a[1]}for(var r=i;r<=n;r++){s+=t[e][r].weight}return s}function O(t,e,i,n){var s=0;if(i>n){var a=[n+1,i];i=a[0],n=a[1]}else n-=1;for(var r=i;r<=n;r++){s+=t[r][e].weight}return s}function S(t,e,i){var n=[];e.distance=0;for(var s=b(t);s.length;){j(s);var a=s.shift();if(!a.isWall){if(a.distance===1/0)return n;if(a.isVisited=!0,n.push(a),a===i)return n;k(a,t)}}}function k(t,e){var i,n=p(t,e),s=Object(o.a)(n);try{for(s.s();!(i=s.n()).done;){var a=i.value;a.distance=t.distance+a.weight,a.previousNode=t}}catch(r){s.e(r)}finally{s.f()}}var x=i(10);function F(t,e,i){var n=[],s=[];for(e.isVisited=!0,s.push(e);s.length;){var a=s.shift();if(!a.isWall){if(n.push(a),a===i)return n;s.push.apply(s,Object(x.a)(P(a,t)))}}}function P(t,e){var i,n=p(t,e),s=Object(o.a)(n);try{for(s.s();!(i=s.n()).done;){var a=i.value;a.previousNode=t,a.isVisited=!0}}catch(r){s.e(r)}finally{s.f()}return n}function R(t,e,i){var n=[],s=[];for(e.isVisited=!0,s.push(e);s.length;){var a=s.shift();if(!a.isWall){if(a.isVisited=!0,n.push(a),a===i)return n;s.unshift.apply(s,Object(x.a)(C(a,t)))}}}function C(t,e){var i,n=p(t,e),s=Object(o.a)(n);try{for(s.s();!(i=s.n()).done;){i.value.previousNode=t}}catch(a){s.e(a)}finally{s.f()}return n}function E(t,e,i){var n=[];e.heuristic=0;for(var s=b(t);s.length;){w(s);var a=s.shift();if(!a.isWall){if(a.heuristic===1/0)return n;if(a.isVisited=!0,n.push(a),a===i)return n;I(a,t,i)}}}function I(t,e,i){var n,s=p(t,e),a=Object(o.a)(s);try{for(a.s();!(n=a.n()).done;){var r=n.value,c=r.weight+y(e,r,i);r.heuristic>c&&(r.heuristic=c),r.previousNode=t}}catch(u){a.e(u)}finally{a.f()}}function D(t,e,i){var n=[];e.distance=0,e.heuristic=y(t,e,i);for(var s=b(t);s.length;){m(s);var a=s.shift();if(!a.isWall){if(a.distance===1/0)return n;if(a.isVisited=!0,n.push(a),a===i)return n;M(a,t,i)}}}function M(t,e,i){var n,s=p(t,e),a=Object(o.a)(s);try{for(a.s();!(n=a.n()).done;){var r=n.value,c=t.distance+r.weight;r.distance>c&&(r.distance=c),r.heuristic=1.5*y(e,r,i),r.previousNode=t}}catch(u){a.e(u)}finally{a.f()}}i(23),i(24),i(25),i(26),i(27);var W=function(t){Object(h.a)(i,t);var e=Object(f.a)(i);function i(){var t;return Object(u.a)(this,i),(t=e.call(this)).handleKeyDown=t.handleKeyDown.bind(Object(l.a)(t)),t.state={grid:[],rows:20,cols:52,speed:10,mouseIsPressed:!1,startNodeRow:10,startNodeCol:15,finishNodeRow:10,finishNodeCol:35,itemPressed:null,keyPressed:"r",description:"Press W to insert weights and R to get back to walls."},t}return Object(d.a)(i,[{key:"componentDidMount",value:function(){var t=this.getInitialGrid();document.addEventListener("keydown",this.handleKeyDown),this.setState({grid:t})}},{key:"componentWillUnmount",value:function(){document.removeEventListener("keydown",this.handleKeyDown)}},{key:"createNode",value:function(t,e){return{col:t,row:e,isStart:e===this.state.startNodeRow&&t===this.state.startNodeCol,isFinish:e===this.state.finishNodeRow&&t===this.state.finishNodeCol,distance:1/0,heuristic:1/0,weight:1,isVisited:!1,isWall:!1,previousNode:null}}},{key:"getInitialGrid",value:function(){for(var t=[],e=0;e<this.state.rows;e++){for(var i=[],n=0;n<this.state.cols;n++)i.push(this.createNode(n,e));t.push(i)}return t}},{key:"handleMouseDown",value:function(t,e){var i=this.state.grid[t][e],n=null,s=[];i.isStart?(s=this.moveStartNode(this.state.grid,t,e),n="startNode"):i.isFinish?(s=this.moveFinishNode(this.state.grid,t,e),n="finishNode"):s="w"===this.state.keyPressed?T(this.state.grid,t,e):A(this.state.grid,t,e),this.setState({grid:s,mouseIsPressed:!0,itemPressed:n})}},{key:"handleMouseEnter",value:function(t,e){if(this.state.mouseIsPressed){var i=[];i="startNode"===this.state.itemPressed?this.moveStartNode(this.state.grid,t,e):"finishNode"===this.state.itemPressed?this.moveFinishNode(this.state.grid,t,e):"w"===this.state.keyPressed?T(this.state.grid,t,e):A(this.state.grid,t,e),this.setState({grid:i})}}},{key:"handleMouseUp",value:function(){this.setState({mouseIsPressed:!1,itemPressed:null})}},{key:"handleKeyDown",value:function(t){"rw".includes(t.key)&&this.setState({keyPressed:t.key})}},{key:"moveStartNode",value:function(t,e,i){var n=this.state,s=n.startNodeRow,a=n.startNodeCol;t[s][a].isStart=!1;var r=t[e][i],o=Object(c.a)(Object(c.a)({},r),{},{isStart:!0});return t[e][i]=o,this.setState({startNodeRow:e,startNodeCol:i}),t}},{key:"moveFinishNode",value:function(t,e,i){var n=this.state,s=n.finishNodeRow,a=n.finishNodeCol;t[s][a].isFinish=!1;var r=t[e][i],o=Object(c.a)(Object(c.a)({},r),{},{isFinish:!0});return t[e][i]=o,this.setState({finishNodeRow:e,finishNodeCol:i}),t}},{key:"animateAlgorithm",value:function(t,e){for(var i=this,n=function(n){if(n===t.length)return setTimeout((function(){i.animateShortestPath(e)}),i.state.speed*n),{v:void 0};setTimeout((function(){var e=t[n],i="";e.isStart?i="start-":e.isFinish?i="finish-":e.weight>1&&(i="weight-"),document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node ".concat(i,"node-visited")}),i.state.speed*n)},s=0;s<=t.length;s++){var a=n(s);if("object"===typeof a)return a.v}}},{key:"animateShortestPath",value:function(t){for(var e=this,i=function(i){setTimeout((function(){var e=t[i],n="";e.isStart?n="start-":e.isFinish?n="finish-":e.weight>1&&(n="weight-"),document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node ".concat(n,"node-shortest-path")}),5*e.state.speed*i)},n=0;n<t.length;n++)i(n)}},{key:"visualizeAlgorithm",value:function(t){var e={dijkstra:S,breadthFirst:F,depthFirst:R,greedy:E,aStar:D};this.setState({description:G(t)}),this.clearPath();var i=this.state,n=i.grid,s=i.startNodeRow,a=i.startNodeCol,r=i.finishNodeRow,o=i.finishNodeCol,c=n[s][a],u=n[r][o],d=e[t](n,c,u),l=function(t){for(var e=[],i=t;null!==i;)e.unshift(i),i=i.previousNode;return e}(u);this.animateAlgorithm(d,l)}},{key:"clearGrid",value:function(){var t,e=this.state.grid,i=Object(o.a)(e);try{for(i.s();!(t=i.n()).done;){var n,s=t.value,a=Object(o.a)(s);try{for(a.s();!(n=a.n()).done;){var r=n.value;V(r);var c=r.isFinish?"node-finish":r.isStart?"node-start":r.isWall?"node-wall":"";document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node ".concat(c)}}catch(u){a.e(u)}finally{a.f()}}}catch(u){i.e(u)}finally{i.f()}}},{key:"clearPath",value:function(){var t,e=this.state.grid,i=Object(o.a)(e);try{for(i.s();!(t=i.n()).done;){var n,s=t.value,a=Object(o.a)(s);try{for(a.s();!(n=a.n()).done;){var r=n.value;V(r,!0,!0);var c=r.isFinish?"node-finish":r.isStart?"node-start":r.isWall?"node-wall":r.weight>1?"node-weight":"";document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node ".concat(c)}}catch(u){a.e(u)}finally{a.f()}}}catch(u){i.e(u)}finally{i.f()}}},{key:"updateGridSize",value:function(){var t=this;this.clearGrid();var e=document.getElementById("n_rows").value,i=2.6*e;this.setState({rows:e,cols:i,startNodeRow:_(0,e-1),startNodeCol:_(0,i/2),finishNodeRow:_(0,e-1),finishNodeCol:_(i/2+1,i-1)},(function(){var e=t.getInitialGrid();t.setState({grid:e})}))}},{key:"updateSpeed",value:function(){var t=document.getElementById("speed").value;this.setState({speed:t},(function(){}))}},{key:"render",value:function(){var t=this,e=this.state,i=e.grid,n=e.mouseIsPressed,s=65/this.state.rows;return Object(v.jsxs)(v.Fragment,{children:[Object(v.jsxs)("div",{className:"header",children:[Object(v.jsxs)("div",{style:{display:"inline-block"},children:[Object(v.jsxs)("span",{className:"rangeValue",children:["SPEED: ",this.state.speed]}),Object(v.jsx)("input",{className:"range",id:"speed",type:"range",min:"1",step:"1",defaultValue:"10",max:"1000",onChange:function(){return t.updateSpeed()}})]}),Object(v.jsxs)("div",{style:{display:"inline-block"},children:[Object(v.jsxs)("span",{className:"rangeValue",children:["ROWS: ",this.state.rows]}),Object(v.jsx)("input",{className:"range",id:"n_rows",type:"range",min:"5",step:"1",defaultValue:"20",max:"23",onChange:function(){return t.updateGridSize()}})]}),Object(v.jsx)("button",{className:"button_slide slide_down",id:"btn",onClick:function(){return t.clearGrid()},children:"CLEAR GRID"}),Object(v.jsx)("button",{className:"button_slide slide_down",id:"btn2",onClick:function(){return t.clearPath()},children:"CLEAR PATH"}),Object(v.jsxs)("select",{id:"select_box",className:"box slide_down",onChange:function(){var e=document.getElementById("select_box").value;"default"!==e?t.visualizeAlgorithm(e):t.setState({description:"Press W to insert weights and R to get back to walls."})},defaultValue:"default",children:[Object(v.jsx)("option",{value:"default",children:"ALGORITHM"}),Object(v.jsx)("option",{value:"dijkstra",children:"DIJKSTRA"}),Object(v.jsx)("option",{value:"breadthFirst",children:"BREADTH FIRST"}),Object(v.jsx)("option",{value:"depthFirst",children:"DEPTH FIRST"}),Object(v.jsx)("option",{value:"greedy",children:"GREEDY"}),Object(v.jsx)("option",{value:"aStar",children:"A STAR"})]})]}),Object(v.jsx)("div",{className:"text",children:this.state.description}),Object(v.jsx)("div",{className:"grid",children:i.map((function(e,i){return Object(v.jsx)("div",{children:e.map((function(e,i){var a=e.row,r=e.col,o=e.isFinish,c=e.isStart,u=e.isWall,d=e.weight;return Object(v.jsx)(g,{row:a,col:r,side:s,weight:d,isFinish:o,isStart:c,isWall:u,mouseIsPressed:n,onMouseDown:function(e,i){return t.handleMouseDown(e,i)},onMouseEnter:function(e,i){return t.handleMouseEnter(e,i)},onMouseUp:function(){return t.handleMouseUp()}},i)}))},i)}))})]})}}]),i}(n.Component);function V(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t.distance=1/0,t.heuristic=1/0,t.isVisited=!1,t.previousNode=null,e||(t.isWall=!1),i||(t.weight=1)}var A=function(t,e,i){var n=t[e][i],s=Object(c.a)(Object(c.a)({},n),{},{isWall:!n.isWall,weight:1});return t[e][i]=s,t},T=function(t,e,i){var n=t[e][i],s=Object(c.a)(Object(c.a)({},n),{},{isWall:!1,weight:15===n.weight?1:15});return t[e][i]=s,t};function _(t,e){return Math.floor(Math.random()*(e-t+1)+t)}function G(t){return{dijkstra:"Dijkstra is a weighted algorithm that guarantees the shortest possible path.",breadthFirst:"BreadthFirst is an unweighted algorithm that guarantees the shortest possible path.",depthFirst:"DepthFirst is an unweighted algorithm that does not guarantee the shortest path.",greedy:"Greedy is a weighted algorithm that does not guarantee the shortest path.",aStar:"A* is a weighted algorithm that usually guarantees the shortest possible path."}[t]}var B=function(){return Object(v.jsx)("div",{className:"App",children:Object(v.jsx)(W,{})})},L=function(t){t&&t instanceof Function&&i.e(3).then(i.bind(null,29)).then((function(e){var i=e.getCLS,n=e.getFID,s=e.getFCP,a=e.getLCP,r=e.getTTFB;i(t),n(t),s(t),a(t),r(t)}))};r.a.render(Object(v.jsx)(s.a.StrictMode,{children:Object(v.jsx)(B,{})}),document.getElementById("root")),L()}},[[28,1,2]]]);
//# sourceMappingURL=main.28a37ea9.chunk.js.map